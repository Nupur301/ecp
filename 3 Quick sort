//Consider a student database of SEIT class (at least 15 records). Database contains
different fields of every student like Roll No, Name and SGPA.(array of structure)
c) Arrange list of students to find out first ten toppers from a class. (Use Quick sort)


#include <iostream>
#include <string>

using namespace std;

struct Student {
    int rollNo;
    string name;
    float SGPA;
};

int partition(Student students[], int low, int high) {
    float pivot = students[high].SGPA;
    int i = (low - 1);

    for (int j = low; j <= high - 1; j++) {
        if (students[j].SGPA >= pivot) {
            i++;
            swap(students[i], students[j]);
        }
    }

    swap(students[i + 1], students[high]);
    return (i + 1);
}

void quickSort(Student students[], int low, int high) {
    if (low < high) {
        int pi = partition(students, low, high);

        quickSort(students, low, pi - 1);
        quickSort(students, pi + 1, high);
    }
}

void printToppers(Student students[], int n, int k) {
    cout << "Top " << k << " Toppers:" << endl;
    cout << "Name\tRoll No\tSGPA" << endl;
    cout << "----\t-------\t----" << endl;
    for (int i = 0; i < k; i++) {
        cout << students[i].name << "\t" << students[i].rollNo << "\t" << students[i].SGPA << endl;
    }
}

int main() {
    Student students[15];

    // Populate the student database with data
    // ...

    int n = 15; // Assuming 15 students

    quickSort(students, 0, n - 1);
    printToppers(students, n, 10);

    return 0;
}
